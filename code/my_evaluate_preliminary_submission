#!/bin/bash

# a little script for quick and dirty testing.
# Conclusions:
# - the verifier seems sound.
# - conv2 (15 sec) and conv3 (85 sec) are good choices to test performance improvements.
# - conv5 currently takes more than 120 sec to verify.

usage="Usage: my_evaluate_preliminary_submission <v || nv> <net> [timeout]\n
	\tv for verbose, nv for not-verbose\n
	\tnet must be one of: all fc1 fc2 fc3 fc4 fc5 conv1 conv2 conv3 conv4 conv5\n
	\ttimeout is to be specified in seconds (default: 3 seconds)"

if [[ $# -ne 2 && $# -ne 3 ]]; then
	echo -e ${usage}
	exit 0
fi

if [[ $1 == "v" ]]; then
	verbosity="--myverbose"
elif [[ $1 == "nv" ]]; then
	verbosity=""
else
	echo -e ${usage}
	exit 0
fi

netarg=$2
case ${netarg} in
    all|fc1|fc2|fc3|fc4|fc5|conv1|conv2|conv3|conv4|conv5) true ;;
    *)             echo -e ${usage}; exit ;;
esac
if [[ ${netarg} == "all" ]]; then
	netarg="fc1 fc2 fc3 fc4 fc5 conv1 conv2 conv3 conv4 conv5"
fi

if [[ $# -eq 3 ]]; then
	t=$3
else
	t=3 # timeout: 3 seconds by default
fi

for net in ${netarg}
do
	echo "Evaluating network ${net}..."
	
	echo -e "\tOn verifiable test cases (should output 'verified')"
	for spec in `ls ../preliminary_submission_test_cases/${net}/maybe_robust`
	do
		echo -ne "\t\t${spec}: \t"
		timeout ${t}s python timed_verifier.py --net ${net} --spec ../preliminary_submission_test_cases/${net}/maybe_robust/${spec} || echo -e "not verified\n--- (timed out) ---"
	done

	# echo -e "\tOn non-robust test cases (should output 'not verified')"
	# for spec in `ls ../preliminary_submission_test_cases/${net}/not_robust`
	# do
	# 	echo -ne "\t\t${spec}: \t"
	# 	timeout ${t}s python timed_verifier.py --net ${net} --spec ../preliminary_submission_test_cases/${net}/not_robust/${spec} || echo "not verified"
	# done
done
