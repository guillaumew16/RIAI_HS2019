#!/bin/bash

# Conclusions:
# - the verifier seems sound.
# - conv2 (15 sec) and conv3 (85 sec) are good choices to test performance improvements.
# - conv5 currently takes more than 120 sec to verify.

usage="Usage: my_evaluate <prelim || original || generated> <v || nv> <net> [timeout]\n
	\tprelim for preliminary_submission_test_cases/, original for test_cases/, generated for test_cases_generated/\n
	\tv for verbose, nv for not-verbose\n
	\tnet must be 'all' (to run on all networks) or one of: fc1 fc2 fc3 fc4 fc5 conv1 conv2 conv3 conv4 conv5\n
	\ttimeout is to be specified in seconds (default: 3 seconds). Note that the timeout used for official evaluation will be 120 seconds."

if [[ $# -ne 3 && $# -ne 4 ]]; then
	echo -e ${usage}
	exit 0
fi

if [[ $1 == "prelim" ]]; then
	basedir="preliminary_submission_test_cases"
elif [[ $1 == "original" ]]; then
	basedir="test_cases"
elif [[ $1 == "generated" ]]; then
	basedir="test_cases_generated"
else
	echo -e ${usage}
	exit 0
fi

if [[ $2 == "v" ]]; then
	verbosity="--myverbose"
elif [[ $2 == "nv" ]]; then
	verbosity=""
else
	echo -e ${usage}
	exit 0
fi

netarg=$3
case ${netarg} in
    all|fc1|fc2|fc3|fc4|fc5|conv1|conv2|conv3|conv4|conv5) true ;;
    *)             echo -e ${usage}; exit 0;;
esac
if [[ ${netarg} == "all" ]]; then
	netarg="fc1 fc2 fc3 fc4 fc5 conv1 conv2 conv3 conv4 conv5"
fi

if [[ $# -eq 4 ]]; then
	t=$4
else
	t=3 # timeout: 3 seconds by default
fi

for net in ${netarg}
do
	echo "Evaluating network ${net} on test cases in ${basedir}/ ..."
	# echo -ne "\ttest_cases/${net}/${spec}: \t"
	# timeout ${t}s python verifier.py --net ${net} --spec ../test_cases/${net}/${spec} ${verbosity} || echo "timed out (or error)"

	echo -e "\tOn verifiable test cases (should output 'verified')"
	for spec in `ls ../${basedir}/${net}/verifiable`
	do
		echo -ne "\t\t${spec}: \t"
		timeout ${t}s python timed_verifier.py --net ${net} --spec ../${basedir}/${net}/verifiable/${spec} ${verbosity} || echo "not verified"
	done

	# echo -e "\tOn non-robust test cases (should output 'not verified')"
	# for spec in `ls ../${basedir}/${net}/not_robust`
	# do
	# 	echo -ne "\t\t${spec}: \t"
	# 	timeout ${t}s python timed_verifier.py --net ${net} --spec ../${basedir}/${net}/not_robust/${spec} ${verbosity} || echo "not verified"
	# done
done
